# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    pagination_page_limit: '%env(resolve:PAGINATION_PAGE_LIMIT)%'
    uploadDir: '%kernel.project_dir%/public/uploads/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    sensio_framework_extra.view.listener:
        alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener

    # custom services
    acme_api.event.jwt_created_listener:
        class: App\Services\User\EventListener\JWTCreatedListener
        arguments: [ '@request_stack', '@doctrine.orm.entity_manager', '@save.user.info.log' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    acme_api.event.authentication_failure_listener:
        class: App\Services\User\EventListener\AuthenticationFailureListener
        arguments: [ '@request_stack', '@doctrine.orm.entity_manager', '@save.user.info.log' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }

    jwt.user.manager:
        public: true
        class: App\Services\User\JwtUserManager
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@security.token_storage'
            - '@lexik_jwt_authentication.encoder'

    save.user.info.log:
        public: true
        class: App\Services\User\SaveUserInfoToLog
        arguments:
            - '@doctrine.orm.entity_manager'
            - '%kernel.environment%'

    search:
        public: true
        class: App\Services\Search\Search
        arguments:
            - '@doctrine.orm.entity_manager'

    validate.user.password:
        public: true
        class: App\Services\User\Validation\ValidateUserPassword
        arguments: ["@jwt.user.manager", "@fos_user.user_manager", "@security.encoder_factory"]
